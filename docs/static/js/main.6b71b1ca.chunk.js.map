{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifView.js","components/GifImages.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cat","className","onChange","target","value","type","id","for","getGifs","category","a","url","encodeURI","fetch","response","json","data","image","map","img","title","images","downsized_medium","GifView","src","alt","GifImages","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","gifs","GifExpertApp","categorias","setcategories","categorie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEcA,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAENC,mBAAS,IAFH,mBAElCC,EAFkC,KAEvBC,EAFuB,KAqBzC,OACI,sBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAI,gBAEVN,EAAWO,OAAOC,OAAO,IAC3BV,GAAc,SAAAW,GAAG,OAAGT,GAAH,mBAAiBS,OAClCR,EAAc,MAMd,SACQ,sBAAKS,UAAU,eAAf,UACA,uBAAOC,SAnBK,SAACR,GACrBF,EAAcE,EAAES,OAAOC,QAkBqBA,MAAOb,EAAYc,KAAK,OAAOC,GAAG,aAAaL,UAAU,iBAC7F,uBAAOA,UAAU,aAAaM,IAAI,aAAlC,6B,+BC3BHC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,0FAC6EC,UAAUH,GADvF,8BAGII,MAAMF,GAHV,cAGXG,EAHW,gBAIEA,EAASC,OAJX,uBAIVC,EAJU,EAIVA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFb,GAAGa,EAAIb,GACPc,MAAMD,EAAIC,MACVT,IAAG,UAACQ,EAAIE,cAAL,aAAC,EAAYC,iBAAiBX,QATxB,kBAcVM,GAdU,4CAAD,sDCEPM,EAAU,SAAC,GAAmB,EAAlBjB,GAAmB,IAAhBc,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAC9B,OAII,qBAAKV,UAAU,QAAf,SACI,sBAAKA,UAAU,OAAf,UACA,qBACAuB,IAAKb,EAAKc,IAAKL,EACfnB,UAAU,iBAGV,qBAAKA,UAAU,YAAf,SACA,oBAAIA,UAAU,aAAd,SAA4BmB,YC8BzBM,EAzCU,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SAAc,ECDf,SAACA,GAAY,IAAD,EACRnB,mBAAS,CAC/B0B,KAAK,GACLW,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAqB9B,OAfAC,qBAAU,WACRtB,EAAQC,GAAUsB,MAAK,SAAAC,GAGrBC,YAAW,WACPJ,EAAS,CACLb,KAAKgB,EACLL,SAAQ,MAEd,UAIH,CAAClB,IAEGmB,EDhBiBM,CAAazB,GAA3B0B,EAJuB,EAI5BnB,KAAUW,EAJkB,EAIlBA,QAInB,OACI,qCACA,+BAAMlB,EAAN,OACCkB,GACD,sBAAK1B,UAAU,UAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,aAGnB,qBAAKA,UAAU,mCAAf,SAGKkC,EAAKjB,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIb,aEzBX8B,EAAa,WAAI,MAIU9C,mBAAS,CAAC,cAJpB,mBAInB+C,EAJmB,KAIPC,EAJO,KAazB,OACA,qCACG,0DACA,cAAC,EAAD,CAAajD,cAAeiD,IAK5B,qBAAKrC,UAAU,GAAf,SACIoC,EAAWnB,KAAI,SAACqB,EAAUjC,GACvB,OAAO,cAAC,EAAD,CAAoBG,SAAU8B,GAAdjC,YCrBtCkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACQ,cAAC,EAAD,MAERC,SAASC,eAAe,W","file":"static/js/main.6b71b1ca.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n export const AddCategory=({setCategories})=>{\r\n\r\n    const [inputValue,setInputValue] = useState('')\r\n    \r\n    \r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n       \r\n        \r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault(); \r\n        console.log(\"submit hecho\");   \r\n       // if(inputValue===null || inputValue===\"\") return true;\r\n       if(inputValue.trim().length>2){\r\n        setCategories(cat=>[inputValue,...cat]);\r\n        setInputValue('');\r\n       }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <div className=\"form-outline\">\r\n                <input onChange={handleInputChange} value={inputValue} type=\"text\" id=\"typeNumber\" className=\"form-control\" />\r\n                <label className=\"form-label\" for=\"typeNumber\">Categoria</label>\r\n        </div>\r\n         \r\n        \r\n        </form>\r\n    \r\n     );\r\n }\r\n AddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=OEEkXA5Azqpy6bJNHqHJWUaXCf1J723W&q=${ encodeURI(category) }&limit=10&lang=es`;\r\n    \r\n    const response=await fetch(url);\r\n    const {data}=await response.json();\r\n    const image=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n  \r\n    \r\n    return(image)\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifView = ({id,title,url}) => {\r\n    return (\r\n       \r\n      \r\n       \r\n        <div className=\"col  \">\r\n            <div className=\"card\">\r\n            <img\r\n            src={url} alt={title}\r\n            className=\"card-img-top\"\r\n            \r\n            />\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{title}</h5>\r\n            \r\n            </div>\r\n           \r\n            </div>\r\n        </div>\r\n       \r\n     \r\n        \r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGif';\r\nimport { GifView } from './GifView';\r\nexport const GifImages = ({category}) => {\r\n    // const [images, setImages] = useState([]);\r\n\r\n  \r\n      const {data:gifs,loading}=useFetchGifs(category);\r\n   \r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3>{ category } </h3> \r\n        {loading && \r\n        <div className=\"spinner\">\r\n            <div className=\"rect1\"></div>\r\n            <div className=\"rect2\"></div>\r\n            <div className=\"rect3\"></div>\r\n            <div className=\"rect4\"></div>\r\n            <div className=\"rect5\"></div>\r\n        </div>\r\n    }\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n           \r\n           \r\n            {gifs.map((img)=>{\r\n               return <GifView \r\n               key={img.id}\r\n               {...img}\r\n               ></GifView>\r\n           })}\r\n         \r\n        </div>\r\n        </>\r\n\r\n        \r\n    )\r\n}\r\n\r\nGifImages.propTypes = {\r\n\r\n}\r\n\r\nexport default GifImages\r\n","\r\nimport {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGif';\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true});\r\n\r\n\r\n        useEffect(() => {\r\n          getGifs(category).then(imgs=>{\r\n            \r\n\r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                   });\r\n            },4000)\r\n               \r\n            \r\n          });\r\n        }, [category])\r\n       \r\n        return state;\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifImages from './components/GifImages';\r\n\r\nexport const GifExpertApp=()=>{\r\n    //const categorias=[\"One Piece\",\"Dragon Ball\",\"Kimetsu\"]\r\n    \r\n   \r\n    const [categorias, setcategories] = useState([\"One Piece\"])\r\n    // const categoryAdd=(e)=>{\r\n      \r\n    //     // setcategorie([...categorias,'hunterXHunter']);\r\n    //      setcategorie((cat)=>[...categorias,categorias]);\r\n    //      document.getElementById('categoria').value=\"\";\r\n   \r\n    // };\r\n     \r\n     return (\r\n     <>\r\n        <h2>Busqueda de imagenes GIF</h2>\r\n        <AddCategory setCategories={setcategories}></AddCategory>\r\n   \r\n\r\n        {/* <button onClick={categoryAdd}>Add</button> */}\r\n     \r\n        <div className=\"\">\r\n           {categorias.map((categorie,id)=>{\r\n               return <GifImages key={id} category={categorie}/>\r\n           })}\r\n        </div>\r\n      \r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n          <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}